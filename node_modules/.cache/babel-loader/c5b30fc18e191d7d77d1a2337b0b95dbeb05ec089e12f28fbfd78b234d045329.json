{"ast":null,"code":"var _jsxFileName = \"/Users/harshwardhanpatil/Desktop/AWS_WEBSITE/Frontend/src/pages/newsletter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newsletters = () => {\n  _s();\n  const [newsletters, setNewsletters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchNewsletters() {\n      try {\n        const response = await fetch('http://localhost:8000/news');\n        if (!response.ok) throw new Error(`Failed to fetch newsletters: ${response.statusText}`);\n        const data = await response.json();\n        setNewsletters(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    }\n    fetchNewsletters();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-600\",\n      children: \"Loading newsletters...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-600\",\n      children: [\"Error loading newsletters: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"All Newsletters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), newsletters.map(newsletter => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-gray-300 rounded-lg p-4 mb-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: newsletter.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-800 mb-4\",\n        children: newsletter.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), newsletter.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: newsletter.imageUrl,\n        className: \"w-full h-auto rounded-lg mb-4\",\n        alt: \"Newsletter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm\",\n        children: [\"Updated on: \", new Date(newsletter.updatedAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, newsletter.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Newsletters, \"Z3/wur2ARc83h6RMXxjQz0+0q74=\");\n_c = Newsletters;\nexport default Newsletters;\nvar _c;\n$RefreshReg$(_c, \"Newsletters\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Newsletters","_s","newsletters","setNewsletters","loading","setLoading","error","setError","fetchNewsletters","response","fetch","ok","Error","statusText","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","newsletter","title","content","imageUrl","src","alt","Date","updatedAt","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/Users/harshwardhanpatil/Desktop/AWS_WEBSITE/Frontend/src/pages/newsletter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Newsletters = () => {\n  const [newsletters, setNewsletters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchNewsletters() {\n      try {\n        const response = await fetch('http://localhost:8000/news');\n        if (!response.ok) throw new Error(`Failed to fetch newsletters: ${response.statusText}`);\n        \n        const data = await response.json();\n        setNewsletters(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    }\n\n    fetchNewsletters();\n  }, []);\n\n  if (loading) {\n    return <div className=\"text-center text-gray-600\">Loading newsletters...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center text-red-600\">Error loading newsletters: {error}</div>;\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-4\">\n      <h2 className=\"text-2xl font-semibold mb-4\">All Newsletters</h2>\n      {newsletters.map(newsletter => (\n        <div className=\"border border-gray-300 rounded-lg p-4 mb-6 shadow-md\" key={newsletter.id}>\n          <h3 className=\"text-xl font-bold mb-2\">{newsletter.title}</h3>\n          <p className=\"text-gray-800 mb-4\">{newsletter.content}</p>\n          {newsletter.imageUrl && (\n            <img\n              src={newsletter.imageUrl}\n              className=\"w-full h-auto rounded-lg mb-4\"\n              alt=\"Newsletter\"\n            />\n          )}\n          <p className=\"text-gray-500 text-sm\">\n            Updated on: {new Date(newsletter.updatedAt).toLocaleDateString()}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Newsletters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}